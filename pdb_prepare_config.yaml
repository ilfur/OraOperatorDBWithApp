apiVersion: v1
kind: ConfigMap
metadata:
  name: aipdb-prepare-config
  namespace: 23aidemo
data:
  prepare.sh: |-
    #!/bin/bash 
    curl https://raw.githubusercontent.com/ilfur/OraOperatorDBWithApp/sidbpluscdb/dbscripts/01_embedding/01_create_user_vector.sql -o /opt/vecdump/01_create_user_vector.sql
    cd /opt/vecdump
    sqlplus sys/$DB_PASSWORD@$DB_HOST:1521/$DB_SERVICE as sysdba << EOF 
    @01_create_user_vector.sql
    declare
      l_dp_handle       number;
    begin
      -- Open a schema import job.
      l_dp_handle := dbms_datapump.open(
        operation   => 'IMPORT',
        job_mode    => 'TABLE',
        remote_link => NULL,
        job_name    => 'VECDUMP_IMMOBILIEN_IMPORT',
        version     => 'LATEST');

      -- Specify the dump file name and directory object name.
      dbms_datapump.add_file(
        handle    => l_dp_handle,
        filename  => 'immobilien.dmp',
        directory => 'VEC_DUMP',
        filetype => DBMS_DATAPUMP.KU$_FILE_TYPE_DUMP_FILE );

      -- Specify the log file name and directory object name.
      dbms_datapump.add_file(
        handle    => l_dp_handle,
        filename  => 'imp_immobilien.log',
        directory => 'VEC_DUMP',
        filetype  => DBMS_DATAPUMP.KU$_FILE_TYPE_LOG_FILE);
      dbms_datapump.start_job(l_dp_handle);

      dbms_datapump.detach(l_dp_handle);
    end;
    /
    exit; 
    EOF 
  testconn.sh: |-
    #!/bin/bash 
     sqlplus sys/$DB_PASSWORD@$DB_HOST:1521/$DB_SERVICE as sysdba << EOF 
     whenever sqlerror exit failure; 
     select * from dual; 
     exit; 
     EOF 
     if [ $? -eq 0 ] ; then echo "connect successful" ; else echo "DB connect failed, waiting 3 min and exiting..." ; sleep 180 ; exit 5 ; fi 
